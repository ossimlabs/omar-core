buildscript{
  ext{
    grailsVersion = project.grailsVersion
    baseImage = ""
  }
  if(System.env.OMAR_COMMON_PROPERTIES)
  {
    apply from: System.env.OMAR_COMMON_PROPERTIES
  }
  repositories{
    maven { url "${ossimMavenProxy}" }
    if( !System.env.WWW_CONNECTED || Boolean.parseBoolean( System.env.WWW_CONNECTED ) ) {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
  }
  dependencies{
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineGradleV"
  }
}

plugins{
    id "org.sonarqube" version "2.6.2"
    id "com.github.ben-manes.versions" version "0.17.0"
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

apply plugin: "java"
apply plugin: "maven-publish"

group "io.ossim.omar.plugins"

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
  maven { url "${ossimMavenProxy}" }
  if( !System.env.WWW_CONNECTED || Boolean.parseBoolean( System.env.WWW_CONNECTED ) ) {
    maven { url "https://dl.bintray.com/ajay-kumar/plugins" }
    maven { url  "http://dl.bintray.com/dmahapatro/plugins" }
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
  }
}

// dependencyManagement {
//   imports {
//     mavenBom "org.grails:grails-bom:$grailsVersion"
//   }
//   applyMavenExclusions false
// }

dependencies {
  compile "org.grails.plugins:actuator-ui:1.1"
  compile 'org.webjars:ionicons:2.0.1'
  compile "org.webjars:font-awesome:4.4.0"

  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-i18n"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:async"
  compile "org.grails.plugins:scaffolding"
  compile "org.grails.plugins:gsp"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web-plugin"
  provided "org.grails:grails-plugin-services"
  provided "org.grails:grails-plugin-domain-class"
  runtime "com.bertramlabs.plugins:asset-pipeline-grails:${assetPipelineGrailsV}"
  testCompile "org.grails:grails-gorm-testing-support"
  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"
  testCompile "org.grails:grails-web-testing-support"
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:${seleniumHtmlUnitDriverV}"
  testRuntime "net.sourceforge.htmlunit:htmlunit:${htmlUnitV}"

  compile "joda-time:joda-time:${jodaTimeV}"
  // compile "org.grails.plugins:swaggydoc-grails3:0.26.0"
  compile "org.webjars:swagger-ui:${webjarsSwaggerUIV}"
  compile 'org.grails.plugins:swagger:1.0.0'
  compile 'org.grails:grails-plugin-converters:3.2.3'
  compile "io.swagger:swagger-annotations:1.5.15"
  compile "io.swagger:swagger-models:1.5.15"
}

assets {
  packagePlugin = true
}

grailsPublish {
  // TODO: Provide values here
  user = "user"
  key = "key"
  githubSlug = "foo/bar"
  license {
    name = "Apache-2.0"
  }
  title = "My Plugin"
  desc = "Full plugin description"
  developers = [johndoe:"John Doe"]
  portalUser = ""
  portalPassword = ""
}

/*
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}
*/
